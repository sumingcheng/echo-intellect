version: '3.7'

services:
  milvusEtcd:
    container_name: milvusEtcd
    image: quay.io/coreos/etcd:v3.5.5
    environment:
      - ETCD_AUTO_COMPACTION_MODE=revision
      - ETCD_AUTO_COMPACTION_RETENTION=1000
      - ETCD_QUOTA_BACKEND_BYTES=4294967296
      - ETCD_SNAPSHOT_COUNT=50000
    networks:
      - rag-network
    volumes:
      - ./milvus/etcd:/etcd
    command: etcd -advertise-client-urls=http://127.0.0.1:2379 -listen-client-urls http://0.0.0.0:2379 --data-dir /etcd
    healthcheck:
      test: ['CMD', 'etcdctl', 'endpoint', 'health']
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  minio:
    container_name: minio
    image: minio/minio:RELEASE.2023-03-20T20-16-18Z
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - '9001:9001'
      - '9000:9000'
    networks:
      - rag-network
    volumes:
      - ./minio:/minio_data
    command: minio server /minio_data --console-address ":9001"
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live']
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped

  milvusStandalone:
    container_name: milvusStandalone
    image: milvusdb/milvus:v2.4.3
    ports:
      - '19530:19530'
      - '9091:9091'
    command: ['milvus', 'run', 'standalone']
    security_opt:
      - seccomp:unconfined
    environment:
      ETCD_ENDPOINTS: milvusEtcd:2379
      MINIO_ADDRESS: minio:9000
    networks:
      - rag-network
    volumes:
      - ./milvus/data:/var/lib/milvus
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9091/healthz']
      interval: 30s
      start_period: 90s
      timeout: 20s
      retries: 3
    depends_on:
      - 'milvusEtcd'
      - 'minio'
    restart: unless-stopped

  attu:
    container_name: attu
    image: zilliz/attu:v2.4.12
    ports:
      - '19000:3000'
    networks:
      - rag-network
    environment:
      - MILVUS_URL=milvusStandalone:19530
    restart: unless-stopped

  mongodb:
    image: mongo:5.0.18
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    networks:
      - rag-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=raguser
      - MONGO_INITDB_ROOT_PASSWORD=ragpassword
    volumes:
      - ./mongo/data:/data/db
    command: mongod --auth

  redis:
    container_name: redis
    image: redis:7.2
    ports:
      - '6379:6379'
    networks:
      - rag-network
    volumes:
      - ./redis/data:/data
    command: >
      redis-server 
      --appendonly yes 
      --requirepass rag123456
      --maxmemory 2gb 
      --maxmemory-policy allkeys-lfu
    healthcheck:
      test: ['CMD', 'redis-cli', '-a', 'rag123456', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  meilisearch:
    container_name: meilisearch
    image: getmeili/meilisearch:v1.14
    ports:
      - '7700:7700'
    networks:
      - rag-network
    volumes:
      - ./meilisearch/data:/meili_data
    environment:
      MEILI_MASTER_KEY: rag-meili-key-123456
      MEILI_ENV: production
      MEILI_HTTP_ADDR: 0.0.0.0:7700
      MEILI_NO_ANALYTICS: 'true'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:7700/health']
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  rag-network:
    name: rag-network
